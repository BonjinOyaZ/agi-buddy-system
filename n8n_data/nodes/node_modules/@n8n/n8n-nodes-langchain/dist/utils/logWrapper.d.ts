import { type ConnectionTypes, type IExecuteFunctions } from 'n8n-workflow';
import { Tool } from 'langchain/tools';
import { BaseChatMessageHistory } from 'langchain/schema';
import { BaseChatModel } from 'langchain/chat_models/base';
import { Embeddings } from 'langchain/embeddings/base';
import { VectorStore } from 'langchain/vectorstores/base';
import type { Document } from 'langchain/document';
import { TextSplitter } from 'langchain/text_splitter';
import type { BaseDocumentLoader } from 'langchain/document_loaders/base';
import { BaseLLM } from 'langchain/llms/base';
import { BaseChatMemory } from 'langchain/memory';
import { BaseRetriever } from 'langchain/schema/retriever';
import { BaseOutputParser } from 'langchain/schema/output_parser';
import { N8nJsonLoader } from './N8nJsonLoader';
import { N8nBinaryLoader } from './N8nBinaryLoader';
export declare function callMethodAsync<T>(this: T, parameters: {
    executeFunctions: IExecuteFunctions;
    connectionType: ConnectionTypes;
    currentNodeRunIndex: number;
    method: (...args: any[]) => Promise<unknown>;
    arguments: unknown[];
}): Promise<unknown>;
export declare function callMethodSync<T>(this: T, parameters: {
    executeFunctions: IExecuteFunctions;
    connectionType: ConnectionTypes;
    currentNodeRunIndex: number;
    method: (...args: any[]) => T;
    arguments: unknown[];
}): unknown;
export declare function logWrapper(originalInstance: Tool | BaseChatModel | BaseChatMemory | BaseLLM | BaseChatMessageHistory | BaseOutputParser | BaseRetriever | Embeddings | Document[] | Document | BaseDocumentLoader | TextSplitter | VectorStore | N8nBinaryLoader | N8nJsonLoader, executeFunctions: IExecuteFunctions): Embeddings | VectorStore | Tool | BaseChatModel<import("langchain/base_language").BaseLanguageModelCallOptions> | BaseChatMemory | BaseLLM<import("langchain/llms/base").BaseLLMCallOptions> | BaseChatMessageHistory | BaseOutputParser<unknown> | BaseRetriever | Document<Record<string, any>> | Document<Record<string, any>>[] | BaseDocumentLoader | TextSplitter | N8nBinaryLoader | N8nJsonLoader;
