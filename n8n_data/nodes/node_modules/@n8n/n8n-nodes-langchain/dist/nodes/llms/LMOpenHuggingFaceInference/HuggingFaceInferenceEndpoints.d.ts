import type { BaseLLMParams } from 'langchain/llms/base';
import { LLM } from 'langchain/llms/base';
export interface HFInput {
    model: string;
    endpointUrl?: string;
    temperature?: number;
    maxTokens?: number;
    topP?: number;
    topK?: number;
    frequencyPenalty?: number;
    apiKey?: string;
}
export declare class HuggingFaceInference extends LLM implements HFInput {
    get lc_secrets(): {
        [key: string]: string;
    } | undefined;
    model: string;
    temperature: number | undefined;
    maxTokens: number | undefined;
    topP: number | undefined;
    topK: number | undefined;
    frequencyPenalty: number | undefined;
    apiKey: string | undefined;
    endpointUrl: string | undefined;
    constructor(fields?: Partial<HFInput> & BaseLLMParams);
    _llmType(): string;
    _call(prompt: string, options: this['ParsedCallOptions']): Promise<string>;
    static imports(): Promise<{
        HfInference: typeof import('@huggingface/inference').HfInference;
    }>;
}
