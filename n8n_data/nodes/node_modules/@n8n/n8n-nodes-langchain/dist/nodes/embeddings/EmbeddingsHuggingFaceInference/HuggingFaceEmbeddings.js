"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HuggingFaceInferenceEmbeddings = void 0;
const inference_1 = require("@huggingface/inference");
const base_1 = require("langchain/embeddings/base");
class HuggingFaceInferenceEmbeddings extends base_1.Embeddings {
    constructor(fields) {
        var _a;
        super(fields !== null && fields !== void 0 ? fields : {});
        this.model = (_a = fields === null || fields === void 0 ? void 0 : fields.model) !== null && _a !== void 0 ? _a : 'sentence-transformers/distilbert-base-nli-mean-tokens';
        this.apiKey = fields === null || fields === void 0 ? void 0 : fields.apiKey;
        this.endpointUrl = fields === null || fields === void 0 ? void 0 : fields.endpointUrl;
        this.client = this.endpointUrl
            ? new inference_1.HfInference(this.apiKey).endpoint(this.endpointUrl)
            : new inference_1.HfInference(this.apiKey);
    }
    async _embed(texts) {
        const clean = texts.map((text) => text.replace(/\n/g, ' '));
        return this.caller.call(async () => this.client.featureExtraction({
            model: this.model,
            inputs: clean,
        }));
    }
    async embedQuery(document) {
        return this._embed([document]).then((embeddings) => embeddings[0]);
    }
    async embedDocuments(documents) {
        return this._embed(documents);
    }
}
exports.HuggingFaceInferenceEmbeddings = HuggingFaceInferenceEmbeddings;
//# sourceMappingURL=HuggingFaceEmbeddings.js.map