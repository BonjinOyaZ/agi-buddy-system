"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmbeddingsTensorFlow = void 0;
require("@tensorflow/tfjs-backend-cpu");
const tensorflow_1 = require("langchain/embeddings/tensorflow");
const logWrapper_1 = require("../../../utils/logWrapper");
class EmbeddingsTensorFlow {
    constructor() {
        this.description = {
            displayName: 'Embeddings TensorFlow',
            name: 'embeddingsTensorFlow',
            icon: 'file:tensorflow.svg',
            group: ['transform'],
            version: 1,
            description: 'Use Embeddings TensorFlow',
            defaults: {
                name: 'Embeddings TensorFlow',
            },
            codex: {
                categories: ['AI'],
                subcategories: {
                    AI: ['Embeddings'],
                },
                resources: {
                    primaryDocumentation: [
                        {
                            url: 'https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingstensorflow/',
                        },
                    ],
                },
            },
            inputs: [],
            outputs: ["ai_embedding"],
            outputNames: ['Embeddings'],
            properties: [
                {
                    displayName: 'The TensorFlow model we use for generating embeddings is using 512-dimensional embeddings. Please make sure to use the same dimensionality for your vector store. Be aware that running this model with high-dimensional embeddings may result in high CPU usage on the machine.',
                    name: 'notice',
                    type: 'notice',
                    default: '',
                },
            ],
        };
    }
    async supplyData() {
        this.logger.verbose('Supply data for embeddings tensorflow');
        const embeddings = new tensorflow_1.TensorFlowEmbeddings({ maxConcurrency: Infinity });
        return {
            response: (0, logWrapper_1.logWrapper)(embeddings, this),
        };
    }
}
exports.EmbeddingsTensorFlow = EmbeddingsTensorFlow;
//# sourceMappingURL=EmbeddingsTensorFlow.node.js.map